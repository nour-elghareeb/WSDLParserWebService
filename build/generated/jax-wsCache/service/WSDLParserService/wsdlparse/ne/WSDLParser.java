
package wsdlparse.ne;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSDLParser", targetNamespace = "ne.wsdlparse")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSDLParser {


    /**
     * 
     * @param parameters
     * @return
     *     returns wsdlparse.ne.UploadFileResponse
     * @throws WSDLParserFault
     */
    @WebMethod(operationName = "UploadFile", action = "ne.wsdlparse/UploadFile")
    @WebResult(name = "UploadFileResponse", targetNamespace = "ne.wsdlparse", partName = "parameters")
    public UploadFileResponse uploadFile(
        @WebParam(name = "UploadFileRequest", targetNamespace = "ne.wsdlparse", partName = "parameters")
        UploadFileRequest parameters)
        throws WSDLParserFault
    ;

    /**
     * 
     * @param parameters
     * @return
     *     returns wsdlparse.ne.GetAvailableWSDLsResponse
     * @throws WSDLParserFault
     */
    @WebMethod(operationName = "GetAvailableWSDLs", action = "ne.wsdlparse/GetAvailableWSDLs")
    @WebResult(name = "GetAvailableWSDLsResponse", targetNamespace = "ne.wsdlparse", partName = "parameters")
    public GetAvailableWSDLsResponse getAvailableWSDLs(
        @WebParam(name = "GetAvailableWSDLsRequest", targetNamespace = "ne.wsdlparse", partName = "parameters")
        GetAvailableWSDLsRequest parameters)
        throws WSDLParserFault
    ;

    /**
     * 
     * @param parameters
     * @return
     *     returns wsdlparse.ne.GetWSDLPortsResponse
     * @throws WSDLParserFault
     */
    @WebMethod(operationName = "GetWSDLPorts", action = "ne.wsdlparse/GetWSDLPorts")
    @WebResult(name = "GetWSDLPortsResponse", targetNamespace = "ne.wsdlparse", partName = "parameters")
    public GetWSDLPortsResponse getWSDLPorts(
        @WebParam(name = "GetWSDLPortsRequest", targetNamespace = "ne.wsdlparse", partName = "parameters")
        GetWSDLPortsRequest parameters)
        throws WSDLParserFault
    ;

}
